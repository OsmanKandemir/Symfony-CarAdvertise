<?php

namespace App\Controller;

use App\Entity\AdminImage;
use App\Form\AdminImageType;
use App\Repository\AdminImageRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\DomCrawler\Image;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

/**
 * @Route("/admin/image")
 */
class AdminImageController extends AbstractController
{
    /**
     * @Route("/", name="admin_image_index", methods="GET")
     */
    public function index(AdminImageRepository $adminImageRepository): Response
    {
        return $this->render('admin_image/index.html.twig', ['admin_images' => $adminImageRepository->findAll()]);
    }

    /**
     * @Route("/new/{pid}", name="admin_image_new", methods="GET|POST")
     */
    public function new(Request $request,$pid,AdminImageRepository $imageRepository): Response
    {
        $imageList = $imageRepository->findBy(['car_id' => $pid]);
        $adminImage = new AdminImage();
        $form = $this->createForm(AdminImageType::class, $adminImage);
        $form->handleRequest($request);
        if($request->files->get('imagename'))
        //if ($form->isSubmitted()
            {

            $file = $request->files->get('imagename');
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }
            $adminImage->setImage($fileName);
            $adminImage->setCarId($pid);



            $em = $this->getDoctrine()->getManager();
            $em->persist($adminImage);
            $em->flush();

            return $this->redirectToRoute('admin_image_index',array('pid' => $pid));
        }

        return $this->render('admin_image/new.html.twig', [
            'admin_image' => $adminImage,
            'imageList' => $imageList,
            'pid' => $pid,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/{id}", name="admin_image_show", methods="GET")
     */
    public function show(AdminImage $adminImage): Response
    {
        return $this->render('admin_image/show.html.twig', ['admin_image' => $adminImage]);
    }

    /**
     * @Route("/{id}/edit", name="admin_image_edit", methods="GET|POST")
     */
    public function edit(Request $request, AdminImage $adminImage): Response
    {
        $form = $this->createForm(AdminImageType::class, $adminImage);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            $this->getDoctrine()->getManager()->flush();

            return $this->redirectToRoute('admin_image_index', ['id' => $adminImage->getId()]);
        }

        return $this->render('admin_image/edit.html.twig', [
            'admin_image' => $adminImage,
            'form' => $form->createView(),
        ]);
    }

    /**
     * @Route("/{id}", name="admin_image_delete", methods="GET")
     */
    public function delete(Request $request, AdminImage $adminImage): Response
    {
        if ($this->isCsrfTokenValid('delete'.$adminImage->getId(), $request->request->get('_token'))) {
            $em = $this->getDoctrine()->getManager();
            $em->remove($adminImage);
            $em->flush();
        }

        return $this->redirectToRoute('admin_image_index');
    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/{id}/{pid}", name="admin_image_del", methods="GET")
     */
    public function del(Request $request, AdminImage $adminImage,$pid): Response
    {{
            $em = $this->getDoctrine()->getManager();
            $em->remove($adminImage);
            $em->flush();
        }

        return $this->redirectToRoute('admin_image_new',array('pid' => $pid));
    }




}
